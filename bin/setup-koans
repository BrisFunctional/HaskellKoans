#!/usr/bin/runghc
import           Control.Monad (unless)
import qualified System.Exit as SE
import qualified System.Process as SP

sh :: String -> IO ()
sh cmd = do
  x <- SP.system cmd
  case x of
       SE.ExitFailure _ -> error $ "[ERROR]" ++ cmd ++ " failed."
       _ -> return ()

hasCabalDev :: IO Bool
hasCabalDev = do
  x <- SP.system "which cabal-dev"
  case x of
       SE.ExitFailure _ -> return False
       _ -> return True

main :: IO ()
main = do
  hasCabalDev' <- hasCabalDev
  unless hasCabalDev' $ do
    sh "cabal update"
    sh "cabal install cabal-dev"
  unless hasCabalDev' $ do
    putStrLn "add cabal binary files dir to your $PATH"
    SE.exitFailure
  sh "cabal-dev install --only-dependencies"
  sh "cabal-dev configure"
